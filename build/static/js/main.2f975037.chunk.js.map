{"version":3,"sources":["components/Navbar.js","components/Section.js","components/Footer.js","components/products/Products.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","to","Section","className","src","alt","Footer","Products","props","useState","modal","changeModalValue","modalTwo","changeModalValueTwo","productId","changeProductId","tempObject","changeTempObject","resultData","changeResultData","toggle","toggleTwo","id","toggleThree","item","data","InputGroup","Input","onChange","e","inputValue","target","value","toLowerCase","myArray","length","map","brand","startsWith","push","searchByBrand","placeholder","InputGroupAddon","addonType","InputGroupText","name","onClick","index","model","price","count","Modal","isOpen","onValidSubmit","event","values","Math","floor","random","objectId","findIndex","obj","ModalHeader","ModalBody","label","type","required","ModalFooter","splice","deleteProduct","App","techProductsList","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"uNAEe,SAASA,IACpB,OACI,8BACI,+BACI,6BACI,cAAC,IAAD,CAAMC,GAAG,IAAT,oBAEJ,6BACI,cAAC,IAAD,CAAMA,GAAG,YAAT,wBAEJ,6BACI,cAAC,IAAD,CAAMA,GAAG,WAAT,uBAGJ,6BACI,cAAC,IAAD,CAAMA,GAAG,WAAT,4BCjBL,SAASC,IACpB,OACI,kCACI,sBAAKC,UAAU,YAAf,UAGI,2CACA,2KAMA,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,QAAQC,IAAI,sBAAsBC,IAAI,wBCf9D,SAASC,IACpB,OACI,8BACI,0C,4GCWG,SAASC,EAASC,GAAQ,IAAD,EAEFC,oBAAS,GAFP,mBAE7BC,EAF6B,KAEtBC,EAFsB,OAGIF,oBAAS,GAHb,mBAG7BG,EAH6B,KAGnBC,EAHmB,OAICJ,mBAAS,MAJV,mBAI7BK,EAJ6B,KAIlBC,EAJkB,OAKGN,mBAAS,MALZ,mBAK7BO,EAL6B,KAKjBC,EALiB,OAMGR,mBAAS,IANZ,mBAM7BS,EAN6B,KAMjBC,EANiB,KAQ9BC,EAAS,WACXH,EAAiB,MACjBN,GAAkBD,IAGhBW,EAAY,SAACC,GACfP,EAAgBO,GAChBT,GAAqBD,IAGnBW,EAAc,SAACC,GACjBP,EAAiBO,GACjBb,GAAkBD,IA8Cfe,EAAQjB,EAARiB,KAEP,OACI,oCACI,sBAAKtB,UAAU,YAAf,UACI,sBAAKA,UAAU,2CAAf,UACI,+CACA,sBAAKA,UAAU,4BAAf,UACI,eAACuB,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAOC,SAAU,SAACC,GAAD,OA3BnB,SAACA,GAEnB,IAAIC,EAAaD,EAAEE,OAAOC,MAAMC,cAC5BC,EAAU,GAEY,IAAtBJ,EAAWK,OACXhB,EAAiBM,IAEjBA,EAAKW,KAAI,SAAAZ,GACDA,EAAKa,MAAMJ,cAAcK,WAAWR,IACpCI,EAAQK,KAAKf,MAGrBL,EAAiBe,IAcuBM,CAAcX,IAAI1B,UAAU,QAAQsC,YAAY,WACxE,cAACC,EAAA,EAAD,CAAiBC,UAAU,SAA3B,SACI,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,CAAaC,KAAK,kBAI9B,wBAAQC,QAAS1B,EAAQjB,UAAU,uBAAnC,SACI,4CAIZ,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,YAAf,SACI,wBAAOA,UAAU,mBAAjB,UACI,gCACA,+BACI,mCACA,uCACA,uCACA,uCACA,uCACA,6CAGJ,gCACCe,EAAWiB,QAAU,EAAIV,EAAKW,KAAI,SAACZ,EAAMuB,GAAP,OAC/B,+BACI,6BAAKA,EAAQ,IACb,6BAAKvB,EAAKa,QACV,6BAAKb,EAAKwB,QACV,mCAAMxB,EAAKyB,SACX,6BAAKzB,EAAK0B,QACV,+BACI,wBAAQJ,QAAS,kBAAMvB,EAAYC,IAAOrB,UAAU,uBAApD,SACI,cAAC,IAAD,CAAaA,UAAU,qBAAqB0C,KAAK,aAErD,wBAAQ1C,UAAU,iBAAiB2C,QAAS,kBAAMzB,EAAUG,EAAKF,KAAjE,SACI,cAAC,IAAD,CAAanB,UAAU,qBAAqB0C,KAAK,iBAXpDE,MAeR7B,EAAWkB,KAAI,SAACZ,EAAMuB,GAAP,OAChB,+BACI,6BAAKA,EAAQ,IACb,6BAAKvB,EAAKa,QACV,6BAAKb,EAAKwB,QACV,mCAAMxB,EAAKyB,SACX,6BAAKzB,EAAK0B,QACV,+BACI,wBAAQJ,QAAS,kBAAMvB,EAAYC,IAAOrB,UAAU,uBAApD,SACI,cAAC,IAAD,CAAaA,UAAU,qBAAqB0C,KAAK,aAErD,wBAAQ1C,UAAU,iBAAiB2C,QAAS,kBAAMzB,EAAUG,EAAKF,KAAjE,SACI,cAAC,IAAD,CAAanB,UAAU,qBAAqB0C,KAAK,iBAXpDE,kBAsB7B,cAACI,EAAA,EAAD,CAAOC,OAAQ1C,EAAOU,OAAQA,EAA9B,SACI,eAAC,SAAD,CAAQiC,cA5GM,SAACC,EAAOC,GAE9B,GAAmB,OAAfvC,EACAuC,EAAOjC,GAAKkC,KAAKC,MAAsB,IAAhBD,KAAKE,UAC5BjC,EAAKc,KAAKgB,OACP,CACH,IAAII,EAAWlC,EAAKmC,WAAU,SAAAC,GAAG,OAAIA,EAAIvC,KAAON,EAAWM,MAC3DG,EAAKkC,GAAUtB,MAAQkB,EAAOlB,MAC9BZ,EAAKkC,GAAUX,MAAQO,EAAOP,MAC9BvB,EAAKkC,GAAUV,MAAQM,EAAON,MAC9BxB,EAAKkC,GAAUT,MAAQK,EAAOL,MAElC9B,KAgGkDjB,UAAU,YAApD,UACI,cAAC2D,EAAA,EAAD,CAAa1C,OAAQA,EAArB,SACI,+BAAKJ,EAAa,OAAS,MAA3B,gBAEJ,eAAC+C,EAAA,EAAD,WAEI,cAAC,UAAD,CAASlB,KAAK,QAAQb,MAAOhB,GAAcA,EAAWqB,MAAO2B,MAAM,aAAaC,KAAK,OAC5EC,UAAQ,IACjB,cAAC,UAAD,CAASrB,KAAK,QAAQb,MAAOhB,GAAcA,EAAWgC,MAAOgB,MAAM,QAAQC,KAAK,OACvEC,UAAQ,IACjB,cAAC,UAAD,CAASrB,KAAK,QAAQb,MAAOhB,GAAcA,EAAWiC,MAAOe,MAAM,QAAQC,KAAK,SACvEC,UAAQ,IACjB,cAAC,UAAD,CAASrB,KAAK,QAAQb,MAAOhB,GAAcA,EAAWkC,MAAOc,MAAM,QAAQC,KAAK,SACvEC,UAAQ,OAGrB,eAACC,EAAA,EAAD,WACI,wBAAQhE,UAAU,kBAAkB8D,KAAK,SAAzC,kBAGA,wBAAQ9D,UAAU,iBAAiB2C,QAAS1B,EAAQ6C,KAAK,SAAzD,4BAOZ,eAACd,EAAA,EAAD,CAAOC,OAAQxC,EAAUQ,OAAQC,EAAWlB,UAAU,YAAtD,UACI,cAAC2D,EAAA,EAAD,CAAa1C,OAAQC,EAArB,SACI,kDAEJ,cAAC0C,EAAA,EAAD,UACI,0DAEJ,eAACI,EAAA,EAAD,WACI,wBAAQhE,UAAU,kBAAkB2C,QAAS,kBAzJvC,SAACmB,GACnB,GAAa,QAATA,EAAgB,CAChB,IAAIN,EAAWlC,EAAKmC,WAAU,SAAAC,GAAG,OAAIA,EAAIvC,KAAOR,KAChDW,EAAK2C,OAAOT,EAAU,GACtBtC,SAEAA,IAmJ2DgD,CAAc,QAAQJ,KAAK,SAA9E,iBAGA,wBAAQ9D,UAAU,iBAAiB2C,QAASzB,EAAW4C,KAAK,SAA5D,yBCpLL,SAASK,IAAO,IAAD,EAEqB7D,mBAAS,CACpD,CAACa,GAAI,EAAGe,MAAO,QAASW,MAAO,qBAAsBC,MAAO,KAAMC,MAAO,IACzE,CAAC5B,GAAI,EAAGe,MAAO,KAAMW,MAAO,qBAAsBC,MAAO,KAAMC,MAAO,IACtE,CAAC5B,GAAI,EAAGe,MAAO,QAASW,MAAO,qBAAsBC,MAAO,KAAMC,MAAO,IACzE,CAAC5B,GAAI,EAAGe,MAAO,QAASW,MAAO,qBAAsBC,MAAO,KAAMC,MAAO,MANnD,mBAEnBqB,EAFmB,UAS1B,OACI,eAAC,IAAD,WACI,cAACvE,EAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAOwE,OAAK,EAACC,KAAK,IAAlB,SACI,cAACvE,EAAD,MAEJ,cAAC,IAAD,CAAOuE,KAAK,YAAYC,OAAQ,kBAC5B,cAACnE,EAAD,CAAUkB,KAAM8C,UAGxB,cAACjE,EAAD,OCjCZ,IAYeqE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,cCAdQ,IAASV,OACL,cAAC,IAAMW,WAAP,UACI,cAACf,EAAD,MAEJgB,SAASC,eAAe,SAM5BZ,M","file":"static/js/main.2f975037.chunk.js","sourcesContent":["import {Link} from \"react-router-dom\";\r\n\r\nexport default function Navbar() {\r\n    return (\r\n        <nav>\r\n            <ul>\r\n                <li>\r\n                    <Link to=\"/\">Home</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/products\">Products</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/clothes\">Clothes</Link>\r\n                </li>\r\n\r\n                <li>\r\n                    <Link to=\"/service\">Service</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}","export default function Section() {\r\n    return (\r\n        <section>\r\n            <div className=\"container\">\r\n\r\n\r\n                <h1>Home page</h1>\r\n                <h1>This web application was created to fulfill\r\n                    Web Technology moduleâ€™s requirements and does\r\n                    not represent an actual company or service\r\n                </h1>\r\n\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-4\">\r\n                        <img className=\"w-100\" src=\"/images/logo512.png\" alt=\"react-logo\"/>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </section>\r\n    )\r\n}","export default function Footer() {\r\n    return (\r\n        <div>\r\n            <h1>Footer</h1>\r\n        </div>\r\n    )\r\n}","import {\r\n    Modal,\r\n    ModalBody,\r\n    ModalFooter,\r\n    ModalHeader,\r\n    InputGroup,\r\n    InputGroupAddon,\r\n    Input,\r\n    InputGroupText\r\n} from 'reactstrap';\r\nimport {useState} from 'react';\r\nimport FontAwesome from \"react-fontawesome\";\r\nimport {AvField, AvForm} from 'availity-reactstrap-validation';\r\n\r\nexport default function Products(props) {\r\n\r\n    const [modal, changeModalValue] = useState(false)\r\n    const [modalTwo, changeModalValueTwo] = useState(false)\r\n    const [productId, changeProductId] = useState(null)\r\n    const [tempObject, changeTempObject] = useState(null)\r\n    const [resultData, changeResultData] = useState([])\r\n\r\n    const toggle = () => {\r\n        changeTempObject(null)\r\n        changeModalValue(!modal)\r\n    }\r\n\r\n    const toggleTwo = (id) => {\r\n        changeProductId(id)\r\n        changeModalValueTwo(!modalTwo)\r\n    }\r\n\r\n    const toggleThree = (item) => {\r\n        changeTempObject(item)\r\n        changeModalValue(!modal)\r\n    }\r\n\r\n    const deleteProduct = (type) => {\r\n        if (type === 'yes') {\r\n            let objectId = data.findIndex(obj => obj.id === productId)\r\n            data.splice(objectId, 1)\r\n            toggleTwo()\r\n        } else {\r\n            toggleTwo()\r\n        }\r\n    }\r\n\r\n    const handleValidSubmit = (event, values) => {\r\n\r\n        if (tempObject === null) {\r\n            values.id = Math.floor(Math.random() * 100000000);\r\n            data.push(values)\r\n        } else {\r\n            let objectId = data.findIndex(obj => obj.id === tempObject.id)\r\n            data[objectId].brand = values.brand\r\n            data[objectId].model = values.model\r\n            data[objectId].price = values.price\r\n            data[objectId].count = values.count\r\n        }\r\n        toggle()\r\n    }\r\n\r\n    const searchByBrand = (e) => {\r\n\r\n        let inputValue = e.target.value.toLowerCase()\r\n        let myArray = []\r\n\r\n        if (inputValue.length === 0) {\r\n            changeResultData(data)\r\n        } else {\r\n            data.map(item => {\r\n                if (item.brand.toLowerCase().startsWith(inputValue)) {\r\n                    myArray.push(item)\r\n                }\r\n            })\r\n            changeResultData(myArray)\r\n        }\r\n\r\n    }\r\n\r\n    const {data} = props\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"container\">\r\n                <div className=\"d-flex justify-content-between mt-5 mb-2\">\r\n                    <h1>Products page</h1>\r\n                    <div className=\"d-flex align-items-center\">\r\n                        <InputGroup>\r\n                            <Input onChange={(e) => searchByBrand(e)} className=\"h-100\" placeholder=\"search\"/>\r\n                            <InputGroupAddon addonType=\"append\">\r\n                                <InputGroupText>\r\n                                    <FontAwesome name=\"search\"/>\r\n                                </InputGroupText>\r\n                            </InputGroupAddon>\r\n                        </InputGroup>\r\n                        <button onClick={toggle} className=\"btn btn-success ml-3\">\r\n                            <b>Add</b>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                        <table className=\"table table-dark\">\r\n                            <thead>\r\n                            <tr>\r\n                                <th>N</th>\r\n                                <th>Brand</th>\r\n                                <th>Model</th>\r\n                                <th>Price</th>\r\n                                <th>Count</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {resultData.length <= 0 ? data.map((item, index) => (\r\n                                <tr key={index}>\r\n                                    <td>{index + 1}</td>\r\n                                    <td>{item.brand}</td>\r\n                                    <td>{item.model}</td>\r\n                                    <td>${item.price}</td>\r\n                                    <td>{item.count}</td>\r\n                                    <td>\r\n                                        <button onClick={() => toggleThree(item)} className=\"btn btn-warning mr-2\">\r\n                                            <FontAwesome className=\"super-crazy-colors\" name=\"pencil\"/>\r\n                                        </button>\r\n                                        <button className=\"btn btn-danger\" onClick={() => toggleTwo(item.id)}>\r\n                                            <FontAwesome className=\"super-crazy-colors\" name=\"trash\"/>\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            )) : resultData.map((item, index) => (\r\n                                <tr key={index}>\r\n                                    <td>{index + 1}</td>\r\n                                    <td>{item.brand}</td>\r\n                                    <td>{item.model}</td>\r\n                                    <td>${item.price}</td>\r\n                                    <td>{item.count}</td>\r\n                                    <td>\r\n                                        <button onClick={() => toggleThree(item)} className=\"btn btn-warning mr-2\">\r\n                                            <FontAwesome className=\"super-crazy-colors\" name=\"pencil\"/>\r\n                                        </button>\r\n                                        <button className=\"btn btn-danger\" onClick={() => toggleTwo(item.id)}>\r\n                                            <FontAwesome className=\"super-crazy-colors\" name=\"trash\"/>\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Modal isOpen={modal} toggle={toggle}>\r\n                <AvForm onValidSubmit={handleValidSubmit} className=\"text-dark\">\r\n                    <ModalHeader toggle={toggle}>\r\n                        <h4>{tempObject ? 'Edit' : 'New'} product</h4>\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n\r\n                        <AvField name=\"brand\" value={tempObject && tempObject.brand} label=\"Brand name\" type=\"text\"\r\n                                 required/>\r\n                        <AvField name=\"model\" value={tempObject && tempObject.model} label=\"Model\" type=\"text\"\r\n                                 required/>\r\n                        <AvField name=\"price\" value={tempObject && tempObject.price} label=\"Price\" type=\"number\"\r\n                                 required/>\r\n                        <AvField name=\"count\" value={tempObject && tempObject.count} label=\"Count\" type=\"number\"\r\n                                 required/>\r\n\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <button className=\"btn btn-primary\" type=\"submit\">\r\n                            Save\r\n                        </button>\r\n                        <button className=\"btn btn-danger\" onClick={toggle} type=\"button\">\r\n                            Cancel\r\n                        </button>\r\n                    </ModalFooter>\r\n                </AvForm>\r\n            </Modal>\r\n\r\n            <Modal isOpen={modalTwo} toggle={toggleTwo} className=\"text-dark\">\r\n                <ModalHeader toggle={toggleTwo}>\r\n                    <h4>Delete product</h4>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <h3>Do you want to delete?</h3>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <button className=\"btn btn-primary\" onClick={() => deleteProduct(\"yes\")} type=\"button\">\r\n                        Yes\r\n                    </button>\r\n                    <button className=\"btn btn-danger\" onClick={toggleTwo} type=\"button\">\r\n                        No\r\n                    </button>\r\n                </ModalFooter>\r\n            </Modal>\r\n\r\n        </section>\r\n    )\r\n}","import React from 'react'\r\nimport Navbar from \"./components/Navbar\";\r\nimport Section from \"./components/Section\";\r\nimport Footer from \"./components/Footer\";\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n} from \"react-router-dom\";\r\nimport Products from \"./components/products/Products\";\r\nimport {useState} from 'react';\r\n\r\nexport default function App() {\r\n\r\n    const [techProductsList, changeProductsList] = useState([\r\n        {id: 1, brand: 'Apple', model: 'MacBook PRO | 2020', price: 2799, count: 15},\r\n        {id: 2, brand: 'HP', model: 'MacBook PRO | 2019', price: 2799, count: 20},\r\n        {id: 3, brand: 'Apple', model: 'MacBook PRO | 2018', price: 2799, count: 15},\r\n        {id: 4, brand: 'Apple', model: 'MacBook PRO | 2020', price: 2799, count: 35},\r\n    ])\r\n\r\n    return (\r\n        <Router>\r\n            <Navbar/>\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                    <Section/>\r\n                </Route>\r\n                <Route path=\"/products\" render={() => (\r\n                    <Products data={techProductsList}/>\r\n                )}/>\r\n            </Switch>\r\n            <Footer/>\r\n        </Router>\r\n    );\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './global.css';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}